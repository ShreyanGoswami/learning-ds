#+title: 0349 Intersection Of Two Arrays
#+link: https://leetcode.com/problems/intersection-of-two-arrays/
#+tags: array hashtable twopointers binarysearch sorting

Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.

Example 1:
Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]

Example 2:
Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.

Constraints:
1 <= nums1.length, nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 1000

* Hashset

#+begin_src go
// Handrolled Hashset
func intersection(nums1 []int, nums2 []int) (output []int) {
    m := make(map[int]bool)
    for _, num := range nums1 {
        m[num] = true
    }

    for _, num := range nums2 {
        if _, found := m[num]; found {
            output = append(output, num)
            delete(m, num)
        }
    }
    return output
}
// hashset
func intersection(nums1 []int, nums2 []int) []int {
    s1 := hashset.New()
    s2 := hashset.New()

    for _, v := range nums1 {
        s1.Add(v)
    }
    for _, v := range nums2 {
        s2.Add(v)
    }

    intersection := s1.Intersection(s2).Values()
    slice := make([]int, len(intersection))
    for i, v := range intersection {
        slice[i] = v.(int)
    }
    return slice
}
#+end_src
