#+title: 0387 First Unique Character In String
#+link: https://leetcode.com/problems/first-unique-character-in-a-string/
#+tags: hashtable string queue counting

Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:
Input: s = "leetcode"
Output: 0

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1


Constraints:
1 <= s.length <= 105
s consists of only lowercase English letters.

* Counting
TC: O(n), where n is length of string ~s~.
SC: O(1)

#+begin_src go
func firstUniqChar(s string) int {
	var freq [26]int
    for _, c := range s {
		freq[c-'a'] += 1
	}
    for i, c := range s {
		if freq[c-'a'] == 1 {
			return i
		}
	}
	return -1
}
#+end_src

#+begin_src python
class Solution:
    def firstUniqChar(self, s: str) -> int:
        count = Counter(s)
        for i, ch in enumerate(s):
            if count[ch] == 1:
                return i
        return -1
#+end_src
